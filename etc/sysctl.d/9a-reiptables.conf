
# There are three independent hash tables holding connection tracking
# (for stateful firewall), NAT translation and expectations tables.
#
# Conntrack and NAT tables has same size (number of buckets) defined
# in nf_nat module either via @hashsize module parameter given at load
# time via modprobe/insmod command line or automatically calculated
# based on total amount of RAM pages available.
#
# Expect table size calculated as conntrack hash table size / 256.
#
# Maximum number of entries in conntrack determined as hash table size
# multiplyed by factor that defines how lengthly each bucket could be:
#
#   - when @hashsize parameter is used factor is 8
#   - else factor is 4 for compatibility with old implementation
#
# Exact hash table sizes and maximum number of entries supported depend
# on following factors:
#
#   - if @hashsize is given or not
#   - kernel version when @hashsize not given
#   - total number of RAM pages in system
#
# For example with recent kernels and 4G+ of RAM you will get following:
#
#   - conntrack/NAT hash table size: 65536 buckets
#   - expect hash table size: 65536 / 256 = 256 buckets
#   - nf_conntrack_max: 65536 * 4 (no @hashsize param) = 262144 entries
#   - nf_expect_max: 256 * 4 = 1024 entries
#
# You may find exact values by reading kernel log buffer contents:
#
#   # dmesg |egrep 'nf_conntrack'
#   nf_conntrack version 0.5.0 (65536 buckets, 262144 max)
#
# or sysctl:
#
#   # sysctl -n net/netfilter/nf_conntrack_max
#   262144
#   # sysctl -n net/netfilter/nf_conntrack_expect_max
#   1024
#
# Tuning
# ------
# On busy systems serving lot of connections you may get following error
# in kernel log buffer repeatedly and packets traveling the box dropped:
#
#   nf_conntrack: table full, dropping packet
#
# As first step to stop packet drops you need to increment nf_conntrack_max
# sysctl tune below to increase number of entries (connections) supported
# by conntrack system on the box.
#
# However that might not have affect on NAT table that has no way for
# propagating updates for @hashsize parameter change.
#
# For expectations table overflows you might get following error
# in kernel log buffer repeatedly:
#
#   nf_conntrack: expectation table full
#
# You may increment nf_conntrack_expect_max sysctl to address this.
#
# On the other hand having same number of buckets in hash table and huge
# amount of entries (say you tuned nf_conntrack_max to 1048576 or even
# to greather value): with conntrack table of 65536 buckets you may get
# chains per bucket longer than 1048576 / 65536 = 16 which is as twice as
# bigger than maximum factor of 8 when @hashsize parameter is given.
#
# That may affect performance and increase latencies. To prevent this
# you also need to increase number of buckets in nf_conntrack hash table
# by setting @hashsize via sysfs interface of nf_conntrack module
# parameter that will trigger re-hashing or reload nf_conntrack with new
# @hashsize. You may need to reload nf_nat module to account changes in
# conntrack hash table size.
#
# To tune hash table size (rehash) at runtime use following command:
#
#   # echo 131072 >/sys/module/nf_conntrack/parameters/hashsize
#
# Assuming all above preferred method of tuning conntrack, expect and NAT
# hash tables size is by providing @hashsize parameter to nf_conntrack
# module.
#
# By adjusting various timeout values (especially ones for ESTABLISHED)
# you might get smaller number of entries and better performance and
# latencies.

### CONNTRACK ###

## Max number of entries

#net/netfilter/nf_conntrack_max = 1048576
#net/netfilter/nf_conntrack_expect_max = 10240

## Timeouts

# See http://tools.ietf.org/html/rfc5382, section 5.NAT Session Refresh,
# REQ-5 for more information.
#
# On Linux at least 7875 seconds should be passed before abandon the session.
# (tcp_keepalive_time + tcp_keepalive_probes * tcp_keepalive_intvl =
#  7200 + 9 * 75)
#
# Choose at least two times of tcp_keepalive_time sysctl.
#
net/netfilter/nf_conntrack_tcp_timeout_established = 14400

# See http://tools.ietf.org/html/rfc4787, section 4.3. Mapping Refresh,
# REQ-5 for more information.
#
# Choose at least 300 seconds interval as recommended.
#
net/netfilter/nf_conntrack_udp_timeout = 300

# See http://tools.ietf.org/html/rfc5508, 3.2. ICMP Query Session Timeouts,
# REQ-1 for more information.
#
# Choose at least two times longer than minimal.
#
net/netfilter/nf_conntrack_icmp_timeout = 60

# Other protocols (esp,ah,ospf,...)
#
# Leave default.
#
#net/netfilter/nf_conntrack_generic_timeout = 120

